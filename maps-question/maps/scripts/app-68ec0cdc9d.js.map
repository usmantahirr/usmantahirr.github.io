{"version":3,"sources":["scripts/app.js"],"names":["angular","module","SearchController","$scope","Station","MapConfFactory","vm","this","stations","all","detail","visible","content","gauge","col","id","type","data","In Transit","cb","chart","$watch","nv","used","internal","config","gauge_max","capacity","hide","NaN","getClass","percentage","$inject","controller","MapViewController","$log","mapConf","getConf","getIcon","clickHandler","event","station","getDate","date","Date","last_reported","toGMTString","HistoricalUsageController","debug","DistanceQueryController","CurrentUsageController","usage","globalUsage","stationStatusSvc","$resource","service","stationInformationSvc","MainController","$q","_","Math","fetch","resolve","reject","p1","get","$promise","p2","info","status","then","stationData","getMerged","findUsagePercentages","err","defer","promise","totalAvailable","totalDocksAvailable","totalDocksDisabled","totalCapacity","totalUsed","forEach","round","num_bikes_available","num_docks_available","num_docks_disabled","percentageAvailable","map","item","assign","find","station_id","factory","cutOff1","cutOff2","url","scaledSize","conf","center","zoom","runBlock","$rootScope","$state","$document","showSpinner","element","querySelector","removeClass","addClass","hideSpinner","stateChangeStartBroadcast","$on","evt","to","params","redirectTo","preventDefault","go","location","stateChangeSuccessBroadcast","stateChangeErrorBroadcast","toState","toParams","fromState","fromParams","error","arguments","run","routerConfig","$stateProvider","$urlRouterProvider","state","views","@","templateUrl","controllerAs","$stateParams","method","message","stack","parent","otherwise","constant","$","$logProvider","debugEnabled","$templateCache","put"],"mappings":"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","file":"scripts/app-68ec0cdc9d.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('gmpsAssignment', [\n      'ngCookies',\n      'ngResource',\n      'ui.select',\n      'ngSanitize',\n      'ui.router',\n      'ui.bootstrap',\n      'ngMap',\n      'gridshore.c3js.chart']\n    );\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('gmpsAssignment')\n    .controller('SearchController', SearchController);\n\n  /** @ngInject */\n  function SearchController($scope, Station, MapConfFactory) {\n    var vm = this;\n\n    vm.stations = Station.all;\n    vm.detail = {\n      visible: false,\n      content: {},\n      gauge: {\n        col: [{ id: 'In Transit', type: 'gauge' }],\n        data: [{ 'In Transit': 0 }]\n      }\n    };\n\n    vm.cb = function (chart) {\n      vm.chart = chart;\n    };\n\n    $scope.$watch('search.selected', function (nv) {\n      if (nv) {\n        vm.detail.visible = true;\n        vm.detail.content = nv;\n\n        vm.detail.gauge.data[0]['In Transit'] = nv.used;\n\n        if (vm.chart) {\n          vm.chart.internal.config.gauge_max = nv.capacity;\n        }\n      }\n    });\n\n    vm.hide = function () {\n      vm.detail.visible = false;\n      vm.detail.content = NaN;\n    };\n\n    vm.getClass = function (percentage) {\n      if (percentage === 0) {\n        return 'label-danger'\n      } else if (percentage < 50) {\n        return 'label-warning'\n      }\n      return 'label-success'\n    };\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('gmpsAssignment')\n    .controller('MapViewController', MapViewController);\n\n  /** @ngInject */\n  function MapViewController($log, Station, MapConfFactory) {\n    var vm = this;\n\n    vm.stations = Station.all;\n    vm.detail = {\n      visible: false,\n      content: {}\n    };\n\n    vm.mapConf = MapConfFactory.getConf();\n    vm.getIcon = MapConfFactory.getIcon;\n\n    vm.clickHandler = function(event, station) {\n      vm.detail.visible = true;\n      vm.detail.content = station;\n    };\n\n    vm.getDate = function () {\n      var date = new Date(vm.detail.content.last_reported * 1000);\n      return date.toGMTString();\n    };\n\n    vm.hide = function () {\n      vm.detail.visible = false;\n      vm.detail.content = NaN;\n    };\n\n    vm.getClass = function (percentage) {\n      if (percentage === 0) {\n        return 'label-danger'\n      } else if (percentage < 50) {\n        return 'label-warning'\n      }\n      return 'label-success'\n    };\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('gmpsAssignment')\n    .controller('HistoricalUsageController', HistoricalUsageController);\n\n  /** @ngInject */\n  function HistoricalUsageController($log) {\n    var vm = this;\n\n    $log.debug(vm);\n    $log.debug('HistoricalUsageController');\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('gmpsAssignment')\n    .controller('DistanceQueryController', DistanceQueryController);\n\n  /** @ngInject */\n  function DistanceQueryController($scope, Station, MapConfFactory) {\n    var vm = this;\n\n    vm.stations = Station.all;\n    vm.detail = {\n      visible: false,\n      content: {}\n    };\n\n    $scope.$watch('dq.selected', function (nv) {\n      if (nv) {\n        vm.detail.visible = true;\n        vm.detail.content = nv;\n      }\n    });\n\n    vm.mapConf = MapConfFactory.getConf();\n    vm.getIcon = MapConfFactory.getIcon;\n\n    vm.clickHandler = function(event, station) {\n      vm.detail.visible = true;\n      vm.detail.content = station;\n    };\n\n    vm.hide = function () {\n      vm.detail.visible = false;\n      vm.detail.content = NaN;\n    };\n\n    vm.getClass = function (percentage) {\n      if (percentage === 0) {\n        return 'label-danger'\n      } else if (percentage < 50) {\n        return 'label-warning'\n      }\n      return 'label-success'\n    };\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('gmpsAssignment')\n    .controller('CurrentUsageController', CurrentUsageController);\n\n  /** @ngInject */\n  function CurrentUsageController($log, $scope, Station, MapConfFactory) {\n    var vm = this;\n\n    vm.stations = Station.all;\n    vm.usage = Station.globalUsage;\n\n    $log.debug(vm.usage);\n\n    vm.detail = {\n      visible: false,\n      content: {},\n      gauge: {\n        col: [{ id: 'In Transit', type: 'gauge' }],\n        data: [{ 'In Transit': 0 }]\n      }\n    };\n\n    vm.cb = function (chart) {\n      vm.chart = chart;\n    };\n\n    vm.mapConf = MapConfFactory.getConf();\n    vm.getIcon = MapConfFactory.getIcon;\n\n    vm.clickHandler = function(event, station) {\n      vm.detail.visible = true;\n      vm.detail.content = station;\n      vm.detail.gauge.data[0]['In Transit'] = station.used;\n\n      if (vm.chart) {\n        vm.chart.internal.config.gauge_max = station.capacity;\n      }\n    };\n\n    vm.hide = function () {\n      vm.detail.visible = false;\n      vm.detail.content = NaN;\n    };\n\n    vm.getClass = function (percentage) {\n      if (percentage === 0) {\n        return 'label-danger'\n      } else if (percentage < 50) {\n        return 'label-warning'\n      }\n      return 'label-success'\n    };\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('gmpsAssignment')\n    .service('stationStatusSvc', stationStatusSvc);\n\n  /** @ngInject */\n  function stationStatusSvc($resource) {\n    return $resource('https://gbfs.citibikenyc.com/gbfs/en/station_status.json');\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('gmpsAssignment')\n    .service('stationInformationSvc', stationInformationSvc);\n\n  /** @ngInject */\n  function stationInformationSvc($resource) {\n    return $resource('https://gbfs.citibikenyc.com/gbfs/en/station_information.json');\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('gmpsAssignment')\n    .controller('MainController', MainController);\n\n  /** @ngInject */\n  function MainController($log) {\n    var vm = this;\n\n    $log.debug(vm);\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('gmpsAssignment')\n    .factory('StationFactory', Station);\n\n  /** @ngInject */\n  function Station($log, $q, stationStatusSvc, stationInformationSvc, _, Math) {\n    var stationData = {\n      info: NaN,\n      status: NaN,\n      all: NaN\n    };\n\n    function fetch(resolve, reject) {\n      var p1 = stationInformationSvc.get().$promise;\n      var p2 = stationStatusSvc.get().$promise;\n\n      $log.info('Fetching Data');\n\n      $q.all({\n        info: p1,\n        status: p2\n      }).then(function (data) {\n        stationData.info = data.info.data.stations;\n        stationData.status = data.status.data.stations;\n        stationData.all = getMerged();\n\n        findUsagePercentages();\n\n        $log.info('Fetch Complete');\n        resolve(stationData);\n      }).catch(function(err) {\n        reject(err);\n      });\n    }\n\n    function get() {\n      var defer = $q.defer();\n\n      if (stationData.info && stationData.status) {\n        defer.resolve(stationData);\n      } else {\n        fetch(defer.resolve, defer.reject);\n      }\n\n      return defer.promise;\n    }\n\n    function findUsagePercentages() {\n      var globalUsage = {\n        totalAvailable: 0,\n        totalDocksAvailable: 0,\n        totalDocksDisabled: 0,\n        totalCapacity: 0,\n        totalUsed: 0\n      };\n\n      stationData.all.forEach(function (station) {\n        station.percentage = Math.round((station.num_bikes_available / station.capacity) * 100);\n        station.used =  station.capacity - station.num_bikes_available;\n\n        globalUsage.totalAvailable += station.num_bikes_available;\n        globalUsage.totalDocksAvailable += station.num_docks_available;\n        globalUsage.totalDocksDisabled += station.num_docks_disabled;\n        globalUsage.totalCapacity += station.capacity;\n      });\n\n      globalUsage.totalUsed = globalUsage.totalCapacity - globalUsage.totalAvailable;\n      globalUsage.percentageAvailable = Math.round((globalUsage.totalAvailable / globalUsage.totalCapacity) * 100);\n      stationData.globalUsage = globalUsage;\n    }\n\n    function getMerged() {\n      return _.map(stationData.info, function(item) {\n        return _.assign(item, _.find(stationData.status, ['station_id', item.station_id]));\n      });\n    }\n\n    return {\n      info: stationData.info,\n      status: stationData.status,\n      getMerged: getMerged,\n      get: get\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('gmpsAssignment')\n    .factory('MapConfFactory', MapConfFactory);\n\n  /** @ngInject */\n  function MapConfFactory() {\n    var conf = {\n      center: [40.727635, -73.993087],\n      zoom: 14\n    };\n\n    function getIcon(percentage, cutOff1, cutOff2) {\n      if (percentage === cutOff1) {\n        return {\n          url: 'assets/images/map_red.gif',\n          scaledSize:[15, 20]\n        }\n      } else if (percentage < cutOff2) {\n        return {\n          url: 'assets/images/map_orange.gif',\n          scaledSize:[15, 20]\n        }\n      }\n\n      return {\n        url: 'assets/images/map_green.gif',\n        scaledSize:[15, 20]\n      }\n    }\n\n    return {\n      getConf: function () {return conf},\n      getIcon: getIcon\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('gmpsAssignment')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock($log, $rootScope, $state, $document) {\n    $log.debug('runBlock end');\n\n    $rootScope.showSpinner = function () {\n      $log.debug('loading');\n      angular.element($document[0].querySelector(\".page-loading\")).removeClass(\"hidden\");\n      angular.element($document[0].querySelector(\"#ui-view\")).addClass(\"hidden\");\n    };\n\n    $rootScope.hideSpinner = function () {\n      $log.debug('loaded');\n      angular.element($document[0].querySelector(\".page-loading\")).addClass(\"hidden\");\n      angular.element($document[0].querySelector(\"#ui-view\")).removeClass(\"hidden\");\n    };\n\n    var stateChangeStartBroadcast = $rootScope.$on('$stateChangeStart', function(evt, to, params) {\n      if (to.redirectTo) {\n        evt.preventDefault();\n        $state.go(to.redirectTo, params, { location: 'replace' })\n      }\n\n      if (to.resolve) {\n        $rootScope.showSpinner();\n      }\n    });\n\n    var stateChangeSuccessBroadcast = $rootScope.$on('$stateChangeSuccess', function(evt, to) {\n      if (to.resolve) {\n        $rootScope.hideSpinner();\n      }\n    });\n\n    var stateChangeErrorBroadcast = $rootScope.$on('$stateChangeError', function(event, toState, toParams, fromState, fromParams, error) {\n      event.preventDefault();\n      $rootScope.hideSpinner();\n      $state.go('error', {\n        error: error\n      });\n    });\n\n    $rootScope.$on('$destroy', function () {\n      $log('destroyed', arguments);\n      //remove the broadcast subscription when scope is destroyed\n      stateChangeStartBroadcast();\n      stateChangeSuccessBroadcast();\n      stateChangeErrorBroadcast();\n    });\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('gmpsAssignment')\n    .config(routerConfig);\n\n  /** @ngInject */\n  function routerConfig($stateProvider, $urlRouterProvider) {\n    $stateProvider\n      .state('home', {\n        url: '/',\n        redirectTo: 'welcome',\n        views: {\n          '@': {\n            templateUrl: 'app/main/main.html',\n            controller: 'MainController',\n            controllerAs: 'main'\n          }\n        }\n      })\n      .state('error', {\n        url: '/error',\n        params: {\n          error: null\n        },\n        views: {\n          '@': {\n            templateUrl: 'app/pages/error.html',\n            controller: function ($log, $stateParams) {\n              $log.debug('got into error', $stateParams.error);\n\n              if ($stateParams.error) {\n                if ($stateParams.error.status === -1 && $stateParams.error.config.method === \"GET\" ) {\n                  this.error = {\n                    message: 'No Internet or API Host down',\n                    stack: $stateParams.error.config.url + ' not responding'\n                  }\n                } else {\n                  this.error = {\n                    message: $stateParams.error.message,\n                    stack: $stateParams.error.stack\n                  };\n                }\n\n              }\n            },\n            controllerAs: 'err'\n          }\n        }\n\n      })\n      .state('welcome', {\n        url: 'welcome',\n        parent: 'home',\n        resolve: {\n          Station: ['StationFactory', function(Station) {\n            return Station.get();\n          }]\n        },\n        views: {\n          content: {\n            templateUrl: 'app/pages/welcome/welcome.html',\n            controller: ['$log', function ($log) {\n              $log.debug('view data');\n            }]\n          }\n        }\n      })\n      .state('mapView', {\n        url: 'map-View',\n        parent: 'home',\n        resolve: {\n          Station: ['StationFactory', function(Station) {\n            return Station.get();\n          }]\n        },\n        views: {\n          content: {\n            templateUrl: 'app/pages/mapView/mapView.html',\n            controller: 'MapViewController',\n            controllerAs: 'mv'\n          }\n        }\n      })\n      .state('distanceQuery', {\n        url: 'distance-query',\n        parent: 'home',\n        resolve: {\n          Station: ['StationFactory', function(Station) {\n            return Station.get();\n          }]\n        },\n        views: {\n          content: {\n            templateUrl: 'app/pages/distanceQuery/distanceQuery.html',\n            controller: 'DistanceQueryController',\n            controllerAs: 'dq'\n          }\n        }\n      })\n      .state('currentUsage', {\n        url: 'usage',\n        parent: 'home',\n        resolve: {\n          Station: ['StationFactory', function(Station) {\n            return Station.get();\n          }]\n        },\n        views: {\n          content: {\n            templateUrl: 'app/pages/currentUsage/currentUsage.html',\n            controller: 'CurrentUsageController',\n            controllerAs: 'cu'\n          }\n        }\n      })\n      .state('historicalUsage', {\n        url: 'historical-usage',\n        parent: 'home',\n        resolve: {\n          Station: ['StationFactory', function(Station) {\n            return Station.get();\n          }]\n        },\n        views: {\n          content: {\n            templateUrl: 'app/pages/historicalUsage/historicalUsage.html',\n            controller: 'HistoricalUsageController',\n            controllerAs: 'hu'\n          }\n        }\n      })\n      .state('search', {\n        url: 'search',\n        parent: 'home',\n        resolve: {\n          Station: ['StationFactory', function(Station) {\n            return Station.get();\n          }]\n        },\n        views: {\n          content: {\n            templateUrl: 'app/pages/search/search.html',\n            controller: 'SearchController',\n            controllerAs: 'search'\n          }\n        }\n      });\n\n    $urlRouterProvider.otherwise('/');\n  }\n\n})();\n\n/* global _:false, Math:false, $:false */\n(function() {\n  'use strict';\n\n  angular\n    .module('gmpsAssignment')\n    .constant('_', _)\n    .constant('Math', Math)\n    .constant('$', $)\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('gmpsAssignment')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n  }\n\n})();\n\nangular.module(\"gmpsAssignment\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/currentUsage/currentUsage.html\",\"<h1>Current Usage</h1>\");\n$templateCache.put(\"app/distanceQuery/distanceQuery.html\",\"<h2>Distance Query</h2>\");\n$templateCache.put(\"app/historicalUsage/historicalUsage.html\",\"<h1>historicalUsage</h1>\");\n$templateCache.put(\"app/main/main.html\",\"<div ng-show=spinner class=spinner><h1>Loading ...</h1></div><div ng-hide=spinner><nav class=\\\"navbar navbar-default\\\"><div class=container-fluid><div class=navbar-header><span class=navbar-brand>Assignment</span></div></div></nav><div class=container-fluid><div class=row><div class=col-md-2><ul class=\\\"nav nav-pills nav-stacked\\\"><li role=presentation ui-sref-active=active><a type=button ui-sref=welcome>Questions</a></li><li role=presentation ui-sref-active=active><a type=button ui-sref=mapView>Map View</a></li><li role=presentation ui-sref-active=active><a type=button ui-sref=distanceQuery>Distance Based Query</a></li><li role=presentation ui-sref-active=active><a type=button ui-sref=currentUsage>Current Usage</a></li><li role=presentation ui-sref-active=active><a type=button ui-sref=historicalUsage>Historical Usage</a></li><li role=presentation ui-sref-active=active><a type=button ui-sref=search>Search Bar</a></li></ul></div><div ui-view=content class=col-md-9></div></div></div></div><div class=footer></div>\");\n$templateCache.put(\"app/pages/error.html\",\"<div class=container><div class=row><div class=col-md-6><h1>Sorry, We Cant Process</h1><h2>Message</h2><p>{{err.error.message}}</p><h2>Stack</h2><p>{{err.error.stack}}</p></div></div></div>\");\n$templateCache.put(\"app/search/search.html\",\"<h1>search</h1>\");\n$templateCache.put(\"app/welcome/welcome.html\",\"<h1>Questions</h1><div class=row><div class=col-md-12><h3><b>Q1: Map View</b> <a ui-sref=mapView class=\\\"btn btn-xs btn-primary\\\">Solution</a></h3><p>Each bike station is represented by a marker on a map with the following colour coding:<br>Red -> No free bikes<br>Orange -> Less than 50% bikes available<br>Green -> Greater than 75% bikes available</p><h3><b>Q2: Distance-based Query</b> <a ui-sref=distanceQuery class=\\\"btn btn-xs btn-primary\\\">Solution</a></h3><p>Given a station name and a distance in km, the query interface will whittle down the map view to only those stations that fall within “distance” from the target station.</p><h3><b>Q3: Current Usage</b> <a ui-sref=currentUsage class=\\\"btn btn-xs btn-primary\\\">Solution</a></h3><p>A graphical representation of the current usage of individual stations as well as a global view.</p><h3><b>Q4: Historical Usage</b> <a ui-sref=historicalUsage class=\\\"btn btn-xs btn-primary\\\">Solution</a></h3><p>A graphical representation of the minute-wise usage of individual stations as well as a global view.</p><h3><b>Q5: Search</b> <a ui-sref=distanceQuery class=\\\"btn btn-xs btn-primary\\\">Solution</a></h3><p>The search bar (auto complete will be brilliant) enables the user to filter the above two usage views to a particular station by its name.</p></div></div><div class=row><blockquote><p>The solution should be a web app implemented using JS (Angular, React, or Ember). The code should be uploaded to github with a README.md with instructions. The codebase should also include unit tests where appropriate.</p></blockquote></div>\");\n$templateCache.put(\"app/mapView/mapView.html\",\"<h1>Map View</h1>\");\n$templateCache.put(\"app/pages/currentUsage/currentUsage.html\",\"<h2>Current Usage</h2><h3>Global Usage</h3><hr><div class=row><div class=col-md-5><div class=\\\"panel panel-default\\\"><div class=panel-heading><h3 class=inline>Bikes in Transit</h3></div><div class=panel-body><c3chart bindto-id=global-usage><chart-column column-id=\\\"In Transit\\\" column-values={{cu.usage.totalUsed}} column-type=gauge></chart-column><chart-gauge min=0 max={{cu.usage.totalCapacity}} width=50></chart-gauge></c3chart></div></div></div><div class=col-md-4><div class=\\\"panel panel-default\\\"><div class=panel-heading><h3 class=inline>Docks Detail</h3></div><div class=panel-body><table class=\\\"table bigger-content stat-table\\\"><thead><th>Available</th><th>Disabled</th></thead><tbody><tr><td>{{cu.usage.totalDocksAvailable}}</td><td>{{cu.usage.totalDocksDisabled}}</td></tr></tbody></table></div></div></div><div class=col-md-3><div class=\\\"panel panel-default\\\"><div class=panel-heading><h3 class=inline>Available to Use</h3></div><div class=panel-body><div class=stat-num>{{cu.usage.percentageAvailable}}%</div></div></div></div></div><h3 ng-if=!cu.detail.visible class=inline>Selected Usage</h3><div ng-if=cu.detail.visible><h3 class=inline>{{cu.detail.content.name}}</h3><span style=position:relative><span ng-class=cu.getClass(cu.detail.content.percentage) style=\\\"margin-left: 15px; top: -3px; padding: 5px 10px;position: absolute;font-weight: bold\\\" class=label>{{cu.detail.content.num_bikes_available}} out of {{cu.detail.content.capacity}} Bikes Available</span> <button ng-click=cu.hide() class=\\\"btn btn-xs btn-primary pull-right\\\">Unselect</button></span></div><hr><div ng-if=!cu.detail.visible class=row><div class=col-md-12><div class=\\\"notification red\\\">Please select pin from map</div></div></div><div ng-if=cu.detail.visible class=row><div class=col-md-5><div class=\\\"panel panel-default\\\"><div class=panel-heading><h3 class=inline>Bikes in Transit</h3></div><div class=panel-body><c3chart bindto-id=current-usage chart-columns=cu.detail.gauge.col chart-data=cu.detail.gauge.data callback-function=cu.cb><chart-gauge min=0 max={{cu.detail.content.capacity}} width=50></chart-gauge></c3chart></div></div></div><div class=col-md-4><div class=\\\"panel panel-default\\\"><div class=panel-heading><h3 class=inline>Docks Detail</h3></div><div class=panel-body><table class=\\\"table bigger-content stat-table\\\"><thead><th>Available</th><th>Disabled</th></thead><tbody><tr><td>{{cu.detail.content.num_docks_available}}</td><td>{{cu.detail.content.num_docks_disabled}}</td></tr></tbody></table></div></div></div><div class=col-md-3><div class=\\\"panel panel-default\\\"><div class=panel-heading><h3 class=inline>Available to Use</h3></div><div class=panel-body><div class=stat-num>{{cu.detail.content.percentage}}%</div></div></div></div></div><br><div class=row><div class=col-md-12><ng-map id=map center={{cu.mapConf.center}} zoom={{cu.mapConf.zoom}}><marker ng-repeat=\\\"station in cu.stations\\\" icon=\\\"{{cu.getIcon(station.percentage, 0, 50)}}\\\" position=\\\"[{{station.lat}}, {{station.lon}}]\\\" title={{station.name}} on-click=cu.clickHandler({{station}})></marker></ng-map></div></div>\");\n$templateCache.put(\"app/pages/distanceQuery/distanceQuery.html\",\"<h2>Distance Query</h2><div class=row><div class=col-md-4><ui-select ng-model=dq.selected theme=bootstrap><ui-select-match placeholder=\\\"Select or search a location from list\\\">{{$select.selected.name}}</ui-select-match><ui-select-choices repeat=\\\"item in dq.stations | filter: $select.search\\\"><div ng-bind-html=\\\"item.name | highlight: $select.search\\\"></div><small>Lat &nbsp</small><small ng-bind-html=\\\"item.lat | highlight: $select.search\\\"></small><small>&nbsp Lon &nbsp</small><small ng-bind-html=\\\"item.lon | highlight: $select.search\\\"></small></ui-select-choices></ui-select></div><div class=col-md-2><select class=form-control><option>1 km</option><option>2 km</option><option>5 km</option><option>7 km</option></select></div></div><br><div class=row><div class=col-md-12><ng-map id=map center={{dq.mapConf.center}} zoom={{dq.mapConf.zoom}}><marker ng-repeat=\\\"station in dq.stations\\\" icon=\\\"{{dq.getIcon(station.percentage, 0, 50)}}\\\" position=\\\"[{{station.lat}}, {{station.lon}}]\\\" title={{station.name}} on-click=dq.clickHandler({{station}})></marker></ng-map></div></div><div ng-if=dq.detail.visible class=row><div class=col-md-12><div class=\\\"panel panel-default\\\"><div class=panel-heading><h3 class=inline>{{dq.detail.content.name}}</h3><span style=position:relative><span ng-class=dq.getClass(dq.detail.content.percentage) style=\\\"margin-left: 15px; top: -3px; padding: 5px 10px;position: absolute;font-weight: bold\\\" class=label>{{dq.detail.content.percentage}}% Unused</span> <button ng-click=dq.hide() class=\\\"btn btn-xs btn-primary pull-right\\\">Hide</button></span></div><div class=panel-body><table class=\\\"table bigger-content\\\"><thead><th class=col-md-2>Item</th><th class=col-md-10>Detail</th></thead><tbody><tr ng-repeat=\\\"(key, value) in dq.detail.content\\\"><td>{{key}}</td><td>{{value}}</td></tr></tbody></table></div></div></div></div>\");\n$templateCache.put(\"app/pages/historicalUsage/historicalUsage.html\",\"<h1>historicalUsage</h1>\");\n$templateCache.put(\"app/pages/mapView/mapView.html\",\"<h2>Map View - <span class=red>Click on Map Marker for details</span></h2><div class=row><div class=col-md-12><ng-map id=map center={{mv.mapConf.center}} zoom={{mv.mapConf.zoom}}><marker ng-repeat=\\\"station in mv.stations\\\" icon=\\\"{{mv.getIcon(station.percentage, 0, 50)}}\\\" position=\\\"[{{station.lat}}, {{station.lon}}]\\\" title={{station.name}} on-click=mv.clickHandler({{station}})></marker></ng-map></div></div><div ng-if=mv.detail.visible class=row><div class=col-md-12><div class=\\\"panel panel-default\\\"><div class=panel-heading><h3 class=inline>{{mv.detail.content.name}}</h3><span style=position:relative><span ng-class=mv.getClass(mv.detail.content.percentage) style=\\\"margin-left: 15px; top: -3px; padding: 5px 10px;position: absolute;font-weight: bold\\\" class=label>{{mv.detail.content.percentage}}% Unused</span> <button ng-click=mv.hide() class=\\\"btn btn-xs btn-primary pull-right\\\">Hide</button></span></div><div class=panel-body><div class=row><div class=col-md-4><table class=\\\"table table-striped bigger-content\\\"><thead><th>Location</th></thead><tbody><tr><td class=head>Station ID</td><td>{{mv.detail.content.station_id}}</td></tr><tr><td class=head>Latitude</td><td>{{mv.detail.content.lat}}</td></tr><tr><td class=head>Longitude</td><td>{{mv.detail.content.lon}}</td></tr></tbody></table></div><div class=col-md-4><table class=\\\"table table-striped bigger-content col-md-4\\\"><thead><th>Bike Details</th></thead><tbody><tr><td class=head>Capacity</td><td>{{mv.detail.content.capacity}}</td></tr><tr><td class=head>Bikes Available</td><td>{{mv.detail.content.num_bikes_available}} ({{mv.detail.content.percentage}})</td></tr><tr><td class=head>In Transit</td><td>{{mv.detail.content.used}}</td></tr></tbody></table></div><div class=col-md-4><table class=\\\"table table-striped bigger-content col-md-4\\\"><thead><th>Availability</th></thead><tbody><tr><td class=head>Renting?</td><td ng-if=mv.detail.content.is_renting>Yes</td><td ng-if=!mv.detail.content.is_renting>No</td></tr><tr><td class=head>Last Reported</td><td>{{mv.getDate()}}</td></tr><tr><td class=head>Bikes Disabled</td><td>{{mv.detail.content.num_bikes_disabled}}</td></tr></tbody></table></div></div></div></div></div></div>\");\n$templateCache.put(\"app/pages/search/search.html\",\"<h2>Search</h2><div class=row><div class=col-md-12><ui-select ng-model=search.selected theme=bootstrap><ui-select-match placeholder=\\\"Select or search a location from list\\\">{{$select.selected.name}}</ui-select-match><ui-select-choices repeat=\\\"item in search.stations | filter: $select.search\\\"><div ng-bind-html=\\\"item.name | highlight: $select.search\\\"></div><small>Lat &nbsp</small><small ng-bind-html=\\\"item.lat | highlight: $select.search\\\"></small><small>&nbsp Lon &nbsp</small><small ng-bind-html=\\\"item.lon | highlight: $select.search\\\"></small></ui-select-choices></ui-select></div></div><br><div ng-if=search.detail.visible class=row><div class=col-md-12><div class=\\\"panel panel-default\\\"><div class=panel-heading><h3 class=inline>{{search.detail.content.name}}</h3><span style=position:relative><span ng-class=search.getClass(search.detail.content.percentage) style=\\\"margin-left: 15px; top: -3px; padding: 5px 10px;position: absolute;font-weight: bold\\\" class=label>{{search.detail.content.percentage}}% Unused</span> <button ng-click=search.hide() class=\\\"btn btn-xs btn-primary pull-right\\\">Hide</button></span></div><div class=panel-body><div class=row><div class=col-md-4><table class=\\\"table table-striped bigger-content\\\"><thead><th>Location</th></thead><tbody><tr><td class=head>Station ID</td><td>{{search.detail.content.station_id}}</td></tr><tr><td class=head>Latitude</td><td>{{search.detail.content.lat}}</td></tr><tr><td class=head>Longitude</td><td>{{search.detail.content.lon}}</td></tr></tbody></table></div><div class=col-md-4><table class=\\\"table table-striped bigger-content col-md-4\\\"><thead><th>Bike Details</th></thead><tbody><tr><td class=head>Capacity</td><td>{{search.detail.content.capacity}}</td></tr><tr><td class=head>Bikes Available</td><td>{{search.detail.content.num_bikes_available}} ({{search.detail.content.percentage}})</td></tr><tr><td class=head>In Transit</td><td>{{search.detail.content.used}}</td></tr></tbody></table></div><div class=col-md-4><table class=\\\"table table-striped bigger-content col-md-4\\\"><thead><th>Availability</th></thead><tbody><tr><td class=head>Renting?</td><td ng-if=search.detail.content.is_renting>Yes</td><td ng-if=!search.detail.content.is_renting>No</td></tr><tr><td class=head>Last Reported</td><td>{{search.getDate()}}</td></tr><tr><td class=head>Bikes Disabled</td><td>{{search.detail.content.num_bikes_disabled}}</td></tr></tbody></table></div></div></div></div></div></div><br><div ng-if=search.detail.visible class=row><div class=col-md-5><div class=\\\"panel panel-default\\\"><div class=panel-heading><h3 class=inline>Bikes in Transit</h3></div><div class=panel-body><c3chart bindto-id=current-usage chart-columns=search.detail.gauge.col chart-data=search.detail.gauge.data callback-function=search.cb><chart-gauge min=0 max={{search.detail.content.capacity}} width=50></chart-gauge></c3chart></div></div></div><div class=col-md-4><div class=\\\"panel panel-default\\\"><div class=panel-heading><h3 class=inline>Docks Detail</h3></div><div class=panel-body><table class=\\\"table bigger-content stat-table\\\"><thead><th>Available</th><th>Disabled</th></thead><tbody><tr><td>{{search.detail.content.num_docks_available}}</td><td>{{search.detail.content.num_docks_disabled}}</td></tr></tbody></table></div></div></div><div class=col-md-3><div class=\\\"panel panel-default\\\"><div class=panel-heading><h3 class=inline>Available to Use</h3></div><div class=panel-body><div class=stat-num>{{search.detail.content.percentage}}%</div></div></div></div></div>\");\n$templateCache.put(\"app/pages/welcome/welcome.html\",\"<h1>Questions</h1><div class=row><div class=col-md-12><p>NYC has the largest bike sharing program in the US. The status and usage data for each station in the city is open and available as a live JSON stream.<br>Static station information, such as, its location is available here:</p><pre>https://gbfs.citibikenyc.com/gbfs/en/station_information.json</pre><p>Dynamic station information, such as, the number of currently available bikes is accessible here:<br></p><pre>https://gbfs.citibikenyc.com/gbfs/en/station_status.json</pre></div></div><div class=row><div class=col-md-12><h3><b>Q1: Map View</b> <a ui-sref=mapView class=\\\"btn btn-xs btn-primary\\\">Solution</a></h3><p>Each bike station is represented by a marker on a map with the following colour coding:<br>Red -> No free bikes<br>Orange -> Less than 50% bikes available<br>Green -> Greater than 50% bikes available</p><h3><b>Q2: Distance-based Query</b> <a ui-sref=distanceQuery class=\\\"btn btn-xs btn-primary\\\">Solution</a></h3><p>Given a station name and a distance in km, the query interface will whittle down the map view to only those stations that fall within “distance” from the target station.</p><h3><b>Q3: Current Usage</b> <a ui-sref=currentUsage class=\\\"btn btn-xs btn-primary\\\">Solution</a></h3><p>A graphical representation of the current usage of individual stations as well as a global view.</p><h3><b>Q4: Historical Usage</b> <a ui-sref=historicalUsage class=\\\"btn btn-xs btn-primary\\\">Solution</a></h3><p>A graphical representation of the minute-wise usage of individual stations as well as a global view.</p><h3><b>Q5: Search</b> <a ui-sref=distanceQuery class=\\\"btn btn-xs btn-primary\\\">Solution</a></h3><p>The search bar (auto complete will be brilliant) enables the user to filter the above two usage views to a particular station by its name.</p></div></div><div class=row><blockquote><p>The solution should be a web app implemented using JS (Angular, React, or Ember). The code should be uploaded to github with a README.md with instructions. The codebase should also include unit tests where appropriate.</p></blockquote></div>\");}]);"],"sourceRoot":"/source/"}