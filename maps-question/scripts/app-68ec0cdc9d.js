!function(){"use strict";angular.module("gmpsAssignment",["ngCookies","ngResource","ui.select","ngSanitize","ui.router","ui.bootstrap","ngMap","gridshore.c3js.chart"])}(),function(){"use strict";function t(t,e,a){var i=this;i.stations=e.all,i.detail={visible:!1,content:{},gauge:{col:[{id:"In Transit",type:"gauge"}],data:[{"In Transit":0}]}},i.cb=function(t){i.chart=t},t.$watch("search.selected",function(t){t&&(i.detail.visible=!0,i.detail.content=t,i.detail.gauge.data[0]["In Transit"]=t.used,i.chart&&(i.chart.internal.config.gauge_max=t.capacity))}),i.hide=function(){i.detail.visible=!1,i.detail.content=NaN},i.getClass=function(t){return 0===t?"label-danger":50>t?"label-warning":"label-success"}}t.$inject=["$scope","Station","MapConfFactory"],angular.module("gmpsAssignment").controller("SearchController",t)}(),function(){"use strict";function t(t,e,a){var i=this;i.stations=e.all,i.detail={visible:!1,content:{}},i.mapConf=a.getConf(),i.getIcon=a.getIcon,i.clickHandler=function(t,e){i.detail.visible=!0,i.detail.content=e},i.getDate=function(){var t=new Date(1e3*i.detail.content.last_reported);return t.toGMTString()},i.hide=function(){i.detail.visible=!1,i.detail.content=NaN},i.getClass=function(t){return 0===t?"label-danger":50>t?"label-warning":"label-success"}}t.$inject=["$log","Station","MapConfFactory"],angular.module("gmpsAssignment").controller("MapViewController",t)}(),function(){"use strict";function t(t){var e=this;t.debug(e),t.debug("HistoricalUsageController")}t.$inject=["$log"],angular.module("gmpsAssignment").controller("HistoricalUsageController",t)}(),function(){"use strict";function t(t,e,a){var i=this;i.stations=e.all,i.detail={visible:!1,content:{}},t.$watch("dq.selected",function(t){t&&(i.detail.visible=!0,i.detail.content=t)}),i.mapConf=a.getConf(),i.getIcon=a.getIcon,i.clickHandler=function(t,e){i.detail.visible=!0,i.detail.content=e},i.hide=function(){i.detail.visible=!1,i.detail.content=NaN},i.getClass=function(t){return 0===t?"label-danger":50>t?"label-warning":"label-success"}}t.$inject=["$scope","Station","MapConfFactory"],angular.module("gmpsAssignment").controller("DistanceQueryController",t)}(),function(){"use strict";function t(t,e,a,i){var n=this;n.stations=a.all,n.usage=a.globalUsage,t.debug(n.usage),n.detail={visible:!1,content:{},gauge:{col:[{id:"In Transit",type:"gauge"}],data:[{"In Transit":0}]}},n.cb=function(t){n.chart=t},n.mapConf=i.getConf(),n.getIcon=i.getIcon,n.clickHandler=function(t,e){n.detail.visible=!0,n.detail.content=e,n.detail.gauge.data[0]["In Transit"]=e.used,n.chart&&(n.chart.internal.config.gauge_max=e.capacity)},n.hide=function(){n.detail.visible=!1,n.detail.content=NaN},n.getClass=function(t){return 0===t?"label-danger":50>t?"label-warning":"label-success"}}t.$inject=["$log","$scope","Station","MapConfFactory"],angular.module("gmpsAssignment").controller("CurrentUsageController",t)}(),function(){"use strict";function t(t){return t("https://gbfs.citibikenyc.com/gbfs/en/station_status.json")}t.$inject=["$resource"],angular.module("gmpsAssignment").service("stationStatusSvc",t)}(),function(){"use strict";function t(t){return t("https://gbfs.citibikenyc.com/gbfs/en/station_information.json")}t.$inject=["$resource"],angular.module("gmpsAssignment").service("stationInformationSvc",t)}(),function(){"use strict";function t(t){var e=this;t.debug(e)}t.$inject=["$log"],angular.module("gmpsAssignment").controller("MainController",t)}(),function(){"use strict";function t(t,e,a,i,n,s){function l(n,s){var l=i.get().$promise,o=a.get().$promise;t.info("Fetching Data"),e.all({info:l,status:o}).then(function(e){d.info=e.info.data.stations,d.status=e.status.data.stations,d.all=r(),c(),t.info("Fetch Complete"),n(d)})["catch"](function(t){s(t)})}function o(){var t=e.defer();return d.info&&d.status?t.resolve(d):l(t.resolve,t.reject),t.promise}function c(){var t={totalAvailable:0,totalDocksAvailable:0,totalDocksDisabled:0,totalCapacity:0,totalUsed:0};d.all.forEach(function(e){e.percentage=s.round(e.num_bikes_available/e.capacity*100),e.used=e.capacity-e.num_bikes_available,t.totalAvailable+=e.num_bikes_available,t.totalDocksAvailable+=e.num_docks_available,t.totalDocksDisabled+=e.num_docks_disabled,t.totalCapacity+=e.capacity}),t.totalUsed=t.totalCapacity-t.totalAvailable,t.percentageAvailable=s.round(t.totalAvailable/t.totalCapacity*100),d.globalUsage=t}function r(){return n.map(d.info,function(t){return n.assign(t,n.find(d.status,["station_id",t.station_id]))})}var d={info:NaN,status:NaN,all:NaN};return{info:d.info,status:d.status,getMerged:r,get:o}}t.$inject=["$log","$q","stationStatusSvc","stationInformationSvc","_","Math"],angular.module("gmpsAssignment").factory("StationFactory",t)}(),function(){"use strict";function t(){function t(t,e,a){return t===e?{url:"assets/images/map_red.gif",scaledSize:[15,20]}:a>t?{url:"assets/images/map_orange.gif",scaledSize:[15,20]}:{url:"assets/images/map_green.gif",scaledSize:[15,20]}}var e={center:[40.727635,-73.993087],zoom:14};return{getConf:function(){return e},getIcon:t}}angular.module("gmpsAssignment").factory("MapConfFactory",t)}(),function(){"use strict";function t(t,e,a,i){t.debug("runBlock end"),e.showSpinner=function(){t.debug("loading"),angular.element(i[0].querySelector(".page-loading")).removeClass("hidden"),angular.element(i[0].querySelector("#ui-view")).addClass("hidden")},e.hideSpinner=function(){t.debug("loaded"),angular.element(i[0].querySelector(".page-loading")).addClass("hidden"),angular.element(i[0].querySelector("#ui-view")).removeClass("hidden")};var n=e.$on("$stateChangeStart",function(t,i,n){i.redirectTo&&(t.preventDefault(),a.go(i.redirectTo,n,{location:"replace"})),i.resolve&&e.showSpinner()}),s=e.$on("$stateChangeSuccess",function(t,a){a.resolve&&e.hideSpinner()}),l=e.$on("$stateChangeError",function(t,i,n,s,l,o){t.preventDefault(),e.hideSpinner(),a.go("error",{error:o})});e.$on("$destroy",function(){t("destroyed",arguments),n(),s(),l()})}t.$inject=["$log","$rootScope","$state","$document"],angular.module("gmpsAssignment").run(t)}(),function(){"use strict";function t(t,e){t.state("home",{url:"/",redirectTo:"welcome",views:{"@":{templateUrl:"app/main/main.html",controller:"MainController",controllerAs:"main"}}}).state("error",{url:"/error",params:{error:null},views:{"@":{templateUrl:"app/pages/error.html",controller:["$log","$stateParams",function(t,e){t.debug("got into error",e.error),e.error&&(-1===e.error.status&&"GET"===e.error.config.method?this.error={message:"No Internet or API Host down",stack:e.error.config.url+" not responding"}:this.error={message:e.error.message,stack:e.error.stack})}],controllerAs:"err"}}}).state("welcome",{url:"welcome",parent:"home",resolve:{Station:["StationFactory",function(t){return t.get()}]},views:{content:{templateUrl:"app/pages/welcome/welcome.html",controller:["$log",function(t){t.debug("view data")}]}}}).state("mapView",{url:"map-View",parent:"home",resolve:{Station:["StationFactory",function(t){return t.get()}]},views:{content:{templateUrl:"app/pages/mapView/mapView.html",controller:"MapViewController",controllerAs:"mv"}}}).state("distanceQuery",{url:"distance-query",parent:"home",resolve:{Station:["StationFactory",function(t){return t.get()}]},views:{content:{templateUrl:"app/pages/distanceQuery/distanceQuery.html",controller:"DistanceQueryController",controllerAs:"dq"}}}).state("currentUsage",{url:"usage",parent:"home",resolve:{Station:["StationFactory",function(t){return t.get()}]},views:{content:{templateUrl:"app/pages/currentUsage/currentUsage.html",controller:"CurrentUsageController",controllerAs:"cu"}}}).state("historicalUsage",{url:"historical-usage",parent:"home",resolve:{Station:["StationFactory",function(t){return t.get()}]},views:{content:{templateUrl:"app/pages/historicalUsage/historicalUsage.html",controller:"HistoricalUsageController",controllerAs:"hu"}}}).state("search",{url:"search",parent:"home",resolve:{Station:["StationFactory",function(t){return t.get()}]},views:{content:{templateUrl:"app/pages/search/search.html",controller:"SearchController",controllerAs:"search"}}}),e.otherwise("/")}t.$inject=["$stateProvider","$urlRouterProvider"],angular.module("gmpsAssignment").config(t)}(),function(){"use strict";angular.module("gmpsAssignment").constant("_",_).constant("Math",Math).constant("$",$)}(),function(){"use strict";function t(t){t.debugEnabled(!0)}t.$inject=["$logProvider"],angular.module("gmpsAssignment").config(t)}(),angular.module("gmpsAssignment").run(["$templateCache",function(t){t.put("app/currentUsage/currentUsage.html","<h1>Current Usage</h1>"),t.put("app/distanceQuery/distanceQuery.html","<h2>Distance Query</h2>"),t.put("app/historicalUsage/historicalUsage.html","<h1>historicalUsage</h1>"),t.put("app/main/main.html",'<div ng-show=spinner class=spinner><h1>Loading ...</h1></div><div ng-hide=spinner><nav class="navbar navbar-default"><div class=container-fluid><div class=navbar-header><span class=navbar-brand>Assignment</span></div></div></nav><div class=container-fluid><div class=row><div class=col-md-2><ul class="nav nav-pills nav-stacked"><li role=presentation ui-sref-active=active><a type=button ui-sref=welcome>Questions</a></li><li role=presentation ui-sref-active=active><a type=button ui-sref=mapView>Map View</a></li><li role=presentation ui-sref-active=active><a type=button ui-sref=distanceQuery>Distance Based Query</a></li><li role=presentation ui-sref-active=active><a type=button ui-sref=currentUsage>Current Usage</a></li><li role=presentation ui-sref-active=active><a type=button ui-sref=historicalUsage>Historical Usage</a></li><li role=presentation ui-sref-active=active><a type=button ui-sref=search>Search Bar</a></li></ul></div><div ui-view=content class=col-md-9></div></div></div></div><div class=footer></div>'),t.put("app/pages/error.html","<div class=container><div class=row><div class=col-md-6><h1>Sorry, We Cant Process</h1><h2>Message</h2><p>{{err.error.message}}</p><h2>Stack</h2><p>{{err.error.stack}}</p></div></div></div>"),t.put("app/search/search.html","<h1>search</h1>"),t.put("app/welcome/welcome.html",'<h1>Questions</h1><div class=row><div class=col-md-12><h3><b>Q1: Map View</b> <a ui-sref=mapView class="btn btn-xs btn-primary">Solution</a></h3><p>Each bike station is represented by a marker on a map with the following colour coding:<br>Red -> No free bikes<br>Orange -> Less than 50% bikes available<br>Green -> Greater than 75% bikes available</p><h3><b>Q2: Distance-based Query</b> <a ui-sref=distanceQuery class="btn btn-xs btn-primary">Solution</a></h3><p>Given a station name and a distance in km, the query interface will whittle down the map view to only those stations that fall within “distance” from the target station.</p><h3><b>Q3: Current Usage</b> <a ui-sref=currentUsage class="btn btn-xs btn-primary">Solution</a></h3><p>A graphical representation of the current usage of individual stations as well as a global view.</p><h3><b>Q4: Historical Usage</b> <a ui-sref=historicalUsage class="btn btn-xs btn-primary">Solution</a></h3><p>A graphical representation of the minute-wise usage of individual stations as well as a global view.</p><h3><b>Q5: Search</b> <a ui-sref=distanceQuery class="btn btn-xs btn-primary">Solution</a></h3><p>The search bar (auto complete will be brilliant) enables the user to filter the above two usage views to a particular station by its name.</p></div></div><div class=row><blockquote><p>The solution should be a web app implemented using JS (Angular, React, or Ember). The code should be uploaded to github with a README.md with instructions. The codebase should also include unit tests where appropriate.</p></blockquote></div>'),t.put("app/mapView/mapView.html","<h1>Map View</h1>"),t.put("app/pages/currentUsage/currentUsage.html",'<h2>Current Usage</h2><h3>Global Usage</h3><hr><div class=row><div class=col-md-5><div class="panel panel-default"><div class=panel-heading><h3 class=inline>Bikes in Transit</h3></div><div class=panel-body><c3chart bindto-id=global-usage><chart-column column-id="In Transit" column-values={{cu.usage.totalUsed}} column-type=gauge></chart-column><chart-gauge min=0 max={{cu.usage.totalCapacity}} width=50></chart-gauge></c3chart></div></div></div><div class=col-md-4><div class="panel panel-default"><div class=panel-heading><h3 class=inline>Docks Detail</h3></div><div class=panel-body><table class="table bigger-content stat-table"><thead><th>Available</th><th>Disabled</th></thead><tbody><tr><td>{{cu.usage.totalDocksAvailable}}</td><td>{{cu.usage.totalDocksDisabled}}</td></tr></tbody></table></div></div></div><div class=col-md-3><div class="panel panel-default"><div class=panel-heading><h3 class=inline>Available to Use</h3></div><div class=panel-body><div class=stat-num>{{cu.usage.percentageAvailable}}%</div></div></div></div></div><h3 ng-if=!cu.detail.visible class=inline>Selected Usage</h3><div ng-if=cu.detail.visible><h3 class=inline>{{cu.detail.content.name}}</h3><span style=position:relative><span ng-class=cu.getClass(cu.detail.content.percentage) style="margin-left: 15px; top: -3px; padding: 5px 10px;position: absolute;font-weight: bold" class=label>{{cu.detail.content.num_bikes_available}} out of {{cu.detail.content.capacity}} Bikes Available</span> <button ng-click=cu.hide() class="btn btn-xs btn-primary pull-right">Unselect</button></span></div><hr><div ng-if=!cu.detail.visible class=row><div class=col-md-12><div class="notification red">Please select pin from map</div></div></div><div ng-if=cu.detail.visible class=row><div class=col-md-5><div class="panel panel-default"><div class=panel-heading><h3 class=inline>Bikes in Transit</h3></div><div class=panel-body><c3chart bindto-id=current-usage chart-columns=cu.detail.gauge.col chart-data=cu.detail.gauge.data callback-function=cu.cb><chart-gauge min=0 max={{cu.detail.content.capacity}} width=50></chart-gauge></c3chart></div></div></div><div class=col-md-4><div class="panel panel-default"><div class=panel-heading><h3 class=inline>Docks Detail</h3></div><div class=panel-body><table class="table bigger-content stat-table"><thead><th>Available</th><th>Disabled</th></thead><tbody><tr><td>{{cu.detail.content.num_docks_available}}</td><td>{{cu.detail.content.num_docks_disabled}}</td></tr></tbody></table></div></div></div><div class=col-md-3><div class="panel panel-default"><div class=panel-heading><h3 class=inline>Available to Use</h3></div><div class=panel-body><div class=stat-num>{{cu.detail.content.percentage}}%</div></div></div></div></div><br><div class=row><div class=col-md-12><ng-map id=map center={{cu.mapConf.center}} zoom={{cu.mapConf.zoom}}><marker ng-repeat="station in cu.stations" icon="{{cu.getIcon(station.percentage, 0, 50)}}" position="[{{station.lat}}, {{station.lon}}]" title={{station.name}} on-click=cu.clickHandler({{station}})></marker></ng-map></div></div>'),t.put("app/pages/distanceQuery/distanceQuery.html",'<h2>Distance Query</h2><div class=row><div class=col-md-4><ui-select ng-model=dq.selected theme=bootstrap><ui-select-match placeholder="Select or search a location from list">{{$select.selected.name}}</ui-select-match><ui-select-choices repeat="item in dq.stations | filter: $select.search"><div ng-bind-html="item.name | highlight: $select.search"></div><small>Lat &nbsp</small><small ng-bind-html="item.lat | highlight: $select.search"></small><small>&nbsp Lon &nbsp</small><small ng-bind-html="item.lon | highlight: $select.search"></small></ui-select-choices></ui-select></div><div class=col-md-2><select class=form-control><option>1 km</option><option>2 km</option><option>5 km</option><option>7 km</option></select></div></div><br><div class=row><div class=col-md-12><ng-map id=map center={{dq.mapConf.center}} zoom={{dq.mapConf.zoom}}><marker ng-repeat="station in dq.stations" icon="{{dq.getIcon(station.percentage, 0, 50)}}" position="[{{station.lat}}, {{station.lon}}]" title={{station.name}} on-click=dq.clickHandler({{station}})></marker></ng-map></div></div><div ng-if=dq.detail.visible class=row><div class=col-md-12><div class="panel panel-default"><div class=panel-heading><h3 class=inline>{{dq.detail.content.name}}</h3><span style=position:relative><span ng-class=dq.getClass(dq.detail.content.percentage) style="margin-left: 15px; top: -3px; padding: 5px 10px;position: absolute;font-weight: bold" class=label>{{dq.detail.content.percentage}}% Unused</span> <button ng-click=dq.hide() class="btn btn-xs btn-primary pull-right">Hide</button></span></div><div class=panel-body><table class="table bigger-content"><thead><th class=col-md-2>Item</th><th class=col-md-10>Detail</th></thead><tbody><tr ng-repeat="(key, value) in dq.detail.content"><td>{{key}}</td><td>{{value}}</td></tr></tbody></table></div></div></div></div>'),t.put("app/pages/historicalUsage/historicalUsage.html","<h1>historicalUsage</h1>"),t.put("app/pages/mapView/mapView.html",'<h2>Map View - <span class=red>Click on Map Marker for details</span></h2><div class=row><div class=col-md-12><ng-map id=map center={{mv.mapConf.center}} zoom={{mv.mapConf.zoom}}><marker ng-repeat="station in mv.stations" icon="{{mv.getIcon(station.percentage, 0, 50)}}" position="[{{station.lat}}, {{station.lon}}]" title={{station.name}} on-click=mv.clickHandler({{station}})></marker></ng-map></div></div><div ng-if=mv.detail.visible class=row><div class=col-md-12><div class="panel panel-default"><div class=panel-heading><h3 class=inline>{{mv.detail.content.name}}</h3><span style=position:relative><span ng-class=mv.getClass(mv.detail.content.percentage) style="margin-left: 15px; top: -3px; padding: 5px 10px;position: absolute;font-weight: bold" class=label>{{mv.detail.content.percentage}}% Unused</span> <button ng-click=mv.hide() class="btn btn-xs btn-primary pull-right">Hide</button></span></div><div class=panel-body><div class=row><div class=col-md-4><table class="table table-striped bigger-content"><thead><th>Location</th></thead><tbody><tr><td class=head>Station ID</td><td>{{mv.detail.content.station_id}}</td></tr><tr><td class=head>Latitude</td><td>{{mv.detail.content.lat}}</td></tr><tr><td class=head>Longitude</td><td>{{mv.detail.content.lon}}</td></tr></tbody></table></div><div class=col-md-4><table class="table table-striped bigger-content col-md-4"><thead><th>Bike Details</th></thead><tbody><tr><td class=head>Capacity</td><td>{{mv.detail.content.capacity}}</td></tr><tr><td class=head>Bikes Available</td><td>{{mv.detail.content.num_bikes_available}} ({{mv.detail.content.percentage}})</td></tr><tr><td class=head>In Transit</td><td>{{mv.detail.content.used}}</td></tr></tbody></table></div><div class=col-md-4><table class="table table-striped bigger-content col-md-4"><thead><th>Availability</th></thead><tbody><tr><td class=head>Renting?</td><td ng-if=mv.detail.content.is_renting>Yes</td><td ng-if=!mv.detail.content.is_renting>No</td></tr><tr><td class=head>Last Reported</td><td>{{mv.getDate()}}</td></tr><tr><td class=head>Bikes Disabled</td><td>{{mv.detail.content.num_bikes_disabled}}</td></tr></tbody></table></div></div></div></div></div></div>'),t.put("app/pages/search/search.html",'<h2>Search</h2><div class=row><div class=col-md-12><ui-select ng-model=search.selected theme=bootstrap><ui-select-match placeholder="Select or search a location from list">{{$select.selected.name}}</ui-select-match><ui-select-choices repeat="item in search.stations | filter: $select.search"><div ng-bind-html="item.name | highlight: $select.search"></div><small>Lat &nbsp</small><small ng-bind-html="item.lat | highlight: $select.search"></small><small>&nbsp Lon &nbsp</small><small ng-bind-html="item.lon | highlight: $select.search"></small></ui-select-choices></ui-select></div></div><br><div ng-if=search.detail.visible class=row><div class=col-md-12><div class="panel panel-default"><div class=panel-heading><h3 class=inline>{{search.detail.content.name}}</h3><span style=position:relative><span ng-class=search.getClass(search.detail.content.percentage) style="margin-left: 15px; top: -3px; padding: 5px 10px;position: absolute;font-weight: bold" class=label>{{search.detail.content.percentage}}% Unused</span> <button ng-click=search.hide() class="btn btn-xs btn-primary pull-right">Hide</button></span></div><div class=panel-body><div class=row><div class=col-md-4><table class="table table-striped bigger-content"><thead><th>Location</th></thead><tbody><tr><td class=head>Station ID</td><td>{{search.detail.content.station_id}}</td></tr><tr><td class=head>Latitude</td><td>{{search.detail.content.lat}}</td></tr><tr><td class=head>Longitude</td><td>{{search.detail.content.lon}}</td></tr></tbody></table></div><div class=col-md-4><table class="table table-striped bigger-content col-md-4"><thead><th>Bike Details</th></thead><tbody><tr><td class=head>Capacity</td><td>{{search.detail.content.capacity}}</td></tr><tr><td class=head>Bikes Available</td><td>{{search.detail.content.num_bikes_available}} ({{search.detail.content.percentage}})</td></tr><tr><td class=head>In Transit</td><td>{{search.detail.content.used}}</td></tr></tbody></table></div><div class=col-md-4><table class="table table-striped bigger-content col-md-4"><thead><th>Availability</th></thead><tbody><tr><td class=head>Renting?</td><td ng-if=search.detail.content.is_renting>Yes</td><td ng-if=!search.detail.content.is_renting>No</td></tr><tr><td class=head>Last Reported</td><td>{{search.getDate()}}</td></tr><tr><td class=head>Bikes Disabled</td><td>{{search.detail.content.num_bikes_disabled}}</td></tr></tbody></table></div></div></div></div></div></div><br><div ng-if=search.detail.visible class=row><div class=col-md-5><div class="panel panel-default"><div class=panel-heading><h3 class=inline>Bikes in Transit</h3></div><div class=panel-body><c3chart bindto-id=current-usage chart-columns=search.detail.gauge.col chart-data=search.detail.gauge.data callback-function=search.cb><chart-gauge min=0 max={{search.detail.content.capacity}} width=50></chart-gauge></c3chart></div></div></div><div class=col-md-4><div class="panel panel-default"><div class=panel-heading><h3 class=inline>Docks Detail</h3></div><div class=panel-body><table class="table bigger-content stat-table"><thead><th>Available</th><th>Disabled</th></thead><tbody><tr><td>{{search.detail.content.num_docks_available}}</td><td>{{search.detail.content.num_docks_disabled}}</td></tr></tbody></table></div></div></div><div class=col-md-3><div class="panel panel-default"><div class=panel-heading><h3 class=inline>Available to Use</h3></div><div class=panel-body><div class=stat-num>{{search.detail.content.percentage}}%</div></div></div></div></div>'),t.put("app/pages/welcome/welcome.html",'<h1>Questions</h1><div class=row><div class=col-md-12><p>NYC has the largest bike sharing program in the US. The status and usage data for each station in the city is open and available as a live JSON stream.<br>Static station information, such as, its location is available here:</p><pre>https://gbfs.citibikenyc.com/gbfs/en/station_information.json</pre><p>Dynamic station information, such as, the number of currently available bikes is accessible here:<br></p><pre>https://gbfs.citibikenyc.com/gbfs/en/station_status.json</pre></div></div><div class=row><div class=col-md-12><h3><b>Q1: Map View</b> <a ui-sref=mapView class="btn btn-xs btn-primary">Solution</a></h3><p>Each bike station is represented by a marker on a map with the following colour coding:<br>Red -> No free bikes<br>Orange -> Less than 50% bikes available<br>Green -> Greater than 50% bikes available</p><h3><b>Q2: Distance-based Query</b> <a ui-sref=distanceQuery class="btn btn-xs btn-primary">Solution</a></h3><p>Given a station name and a distance in km, the query interface will whittle down the map view to only those stations that fall within “distance” from the target station.</p><h3><b>Q3: Current Usage</b> <a ui-sref=currentUsage class="btn btn-xs btn-primary">Solution</a></h3><p>A graphical representation of the current usage of individual stations as well as a global view.</p><h3><b>Q4: Historical Usage</b> <a ui-sref=historicalUsage class="btn btn-xs btn-primary">Solution</a></h3><p>A graphical representation of the minute-wise usage of individual stations as well as a global view.</p><h3><b>Q5: Search</b> <a ui-sref=distanceQuery class="btn btn-xs btn-primary">Solution</a></h3><p>The search bar (auto complete will be brilliant) enables the user to filter the above two usage views to a particular station by its name.</p></div></div><div class=row><blockquote><p>The solution should be a web app implemented using JS (Angular, React, or Ember). The code should be uploaded to github with a README.md with instructions. The codebase should also include unit tests where appropriate.</p></blockquote></div>')}]);
//# sourceMappingURL=../maps/scripts/app-68ec0cdc9d.js.map
